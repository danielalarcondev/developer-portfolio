---
interface Props {
	imagePaths: string[];
}

const { imagePaths } = Astro.props;
---

<div
	class:list={['z-0', 'relative', 'w-full', 'h-full', 'min-h-[30rem]']}
	id='default-carousel'
	data-carousel='static'>
	<!-- Carousel wrapper -->
	<div
		class:list={[
			'relative',
			'w-full',
			'h-full',
			'min-h-[30rem]',
			'overflow-hidden',
			'rounded-lg',
			'z-1',
		]}>
		{
			imagePaths.map((path) => (
				<div
					class:list={[
						'hidden',
						'w-full',
						'h-full',
						'duration-700',
						'ease-in-out',
					]}
					data-carousel-item>
					<video
						autoplay
						loop
						muted
						class='object-cover bg-cover w-full h-full'>
						<source src={path} type='video/mp4' />
					</video>
				</div>
			))
		}
	</div>
	<!-- Slider indicators -->
	<div
		class:list={[
			'absolute',
			'flex',
			'-translate-x-1/2',
			'bottom-5',
			'left-1/2',
			'space-x-3',
			'rtl:space-x-reverse',
			'z-20',
		]}>
		{
			imagePaths.length > 1 &&
				imagePaths.map((_path, index) => (
					<button
						type='button'
						class:list={[
							'slider-indicator',
							'w-3',
							'h-3',
							'rounded-full',
							' hover:bg-rose-300 dark:hover:bg-rose-300',
							'cursor-pointer',
						]}
						aria-current={index === 0 ? 'true' : 'false'}
						aria-label={`Slide ${index + 1}`}
						data-carousel-slide-to={index}
					/>
				))
		}
	</div>

	{
		imagePaths.length > 1 && (
			<div>
				<button
					type='button'
					class:list={[
						'absolute',
						'top-0',
						'start-0',
						'flex',
						'items-center',
						'justify-center',
						'h-full',
						'px-4',
						'cursor-pointer',
						'group',
						'focus:outline-hidden',
						'z-20',
					]}
					data-carousel-prev>
					<span
						class:list={[
							'inline-flex',
							'items-center',
							'justify-center',
							'w-10',
							'h-10',
							'rounded-full',
							'bg-rose-500 hover:bg-rose-600',
						]}>
						<svg
							class:list={['w-4', 'h-4', 'text-white']}
							aria-hidden='true'
							xmlns='http://www.w3.org/2000/svg'
							fill='none'
							viewBox='0 0 6 10'>
							<path
								stroke='currentColor'
								stroke-linecap='round'
								stroke-linejoin='round'
								stroke-width='2'
								d='M5 1 1 5l4 4'
							/>
						</svg>
						<span class:list={['sr-only']}>Previous</span>
					</span>
				</button>
				<button
					type='button'
					class:list={[
						'absolute',
						'top-0',
						'end-0',
						'flex',
						'items-center',
						'justify-center',
						'h-full',
						'px-4',
						'cursor-pointer',
						'group',
						'focus:outline-hidden',
						'z-20',
					]}
					data-carousel-next>
					<span
						class:list={[
							'inline-flex',
							'items-center',
							'justify-center',
							'w-10',
							'h-10',
							'rounded-full',
							'bg-rose-500 hover:bg-rose-600',
						]}>
						<svg
							class:list={[
								'w-4',
								'h-4',
								'text-white',
								'rtl:rotate-180',
							]}
							aria-hidden='true'
							xmlns='http://www.w3.org/2000/svg'
							fill='none'
							viewBox='0 0 6 10'>
							<path
								stroke='currentColor'
								stroke-linecap='round'
								stroke-linejoin='round'
								stroke-width='2'
								d='m1 9 4-4-4-4'
							/>
						</svg>
						<span class:list={['sr-only']}>Next</span>
					</span>
				</button>
			</div>
		)
	}
</div>

<style>
	button.slider-indicator[aria-current='true'] {
		background-color: #f43f5e !important; /* rose-500 */
	}

	button.slider-indicator[aria-current='false'] {
		background-color: #e2e8f0 !important; /* gray-200 */
	}

	button.slider-indicator[aria-current='false']:hover {
		background-color: #fecdd3 !important; /* rose-200 */
	}
</style>
